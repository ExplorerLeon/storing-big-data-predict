AWSTemplateFormatVersion: 2010-09-09
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Extract Predict Part 1 - Virtual Private Cloud VPC resource deployment
        Parameters:
          - EnvironmentName
          - VpcCIDR
          - DataCenterPublicSubnetCIDR
Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
    Default: DE-Extract
  VpcCIDR:
    Description: IPv4 address space for the VPC hosting
    Type: String
    Default: 192.168.0.0/16
  DataCenterPublicSubnetCIDR:
    Description: IPv4 CIDR notation address space for the publicly accessible portion of VPC in first Availability Zone
    Type: String
    Default: 192.168.10.0/24
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  InternetGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  DataCenterPublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref DataCenterPublicSubnetCIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: DE-Extract Data Center Subnet
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${EnvironmentName} Public Routes'
  DefaultPublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  DataCenterPublicSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref DataCenterPublicSubnet
  WindowsInstanceSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VPC
      GroupName: DE-Extract-WindowsInstanceSG
      GroupDescription: Security group for RDP access to Windows instance
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3389'
          ToPort: '3389'
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: DE-Extract-WindowsInstanceSG
  FileServerSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VPC
      GroupName: DE-Extract-FileServerSG
      GroupDescription: Security group for ssh access to data center file server
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 192.168.10.0/24
      Tags:
        - Key: Name
          Value: DE-Extract-FileServerSG
  FileGatewaySG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VPC
      GroupName: DE-Extract-FileGatewaySG
      GroupDescription: Security group for access to file gateway instance
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '1'
          ToPort: '65534'
          CidrIp: 192.168.0.0/16
      Tags:
        - Key: Name
          Value: DE-Extract-FileGatewaySG
Outputs:
  VPC:
    Description: Reference to created VPC
    Value: !Ref VPC
  PublicSubnets:
    Description: List of public subnets
    Value: !Join
      - ','
      - - !Ref DataCenterPublicSubnet
  DataCenterPublicSubnet:
    Description: A reference to the public subnet in the 1st Availability Zone
    Value: !Ref DataCenterPublicSubnet
